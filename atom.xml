<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://YuSec2021.github.io</id>
    <title>YuSec2021</title>
    <link href="https://YuSec2021.github.io" />
    <updated>2022-02-21T08:09:09.000Z</updated>
    <category term="Reverse" />
    <category term="C++" />
    <entry>
        <id>https://yusec2021.github.io/2022/02/21/Splendid_MineCraft/</id>
        <title>ACTF新生赛2020 Splendid_MineCraft</title>
        <link rel="alternate" href="https://yusec2021.github.io/2022/02/21/Splendid_MineCraft/"/>
        <content type="html">&lt;h2 id=&#34;actf新生赛2020splendid_minecraft&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-2&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-3&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-4&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-5&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-6&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-7&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-8&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-9&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-10&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-10&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-11&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-11&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-12&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-12&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-13&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-13&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-14&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-14&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-15&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-15&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-16&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-16&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-17&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-17&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-18&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-18&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-19&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-19&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-20&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-20&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-21&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-21&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-22&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-22&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-23&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-23&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-24&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-24&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-25&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-25&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-26&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-26&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-27&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-27&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-28&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-28&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-29&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-29&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-30&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-30&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-31&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-31&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;actf新生赛2020splendid_minecraft-32&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020splendid_minecraft-32&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] Splendid_MineCraft&lt;/h2&gt;
&lt;p&gt;反编译源码：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v4; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v6; &lt;span class=&#34;comment&#34;&gt;// [esp+0h] [ebp-68h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-54h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *v8; &lt;span class=&#34;comment&#34;&gt;// [esp+18h] [ebp-50h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+20h] [ebp-48h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; flag[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+24h] [ebp-44h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v11[&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+25h] [ebp-43h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v12; &lt;span class=&#34;comment&#34;&gt;// [esp+3Dh] [ebp-2Bh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v13; &lt;span class=&#34;comment&#34;&gt;// [esp+44h] [ebp-24h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v14; &lt;span class=&#34;comment&#34;&gt;// [esp+48h] [ebp-20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v15[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+4Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v16; &lt;span class=&#34;comment&#34;&gt;// [esp+50h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v17; &lt;span class=&#34;comment&#34;&gt;// [esp+54h] [ebp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v18; &lt;span class=&#34;comment&#34;&gt;// [esp+58h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v19; &lt;span class=&#34;comment&#34;&gt;// [esp+5Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int16 v20; &lt;span class=&#34;comment&#34;&gt;// [esp+60h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)aWelcomeToActfS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401050(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v12 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dword_403354 = (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)&amp;amp;unk_4051D8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ((&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; (__cdecl *)(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *))unk_4051D8)(&amp;amp;v17) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;496&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        byte_405018[i] ^= v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      __asm &amp;#123; jmp     eax &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_401020(&lt;span class=&#34;string&#34;&gt;&amp;quot;Wrong\n&amp;quot;&lt;/span&gt;, v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;条件判断：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;flag[&lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(flag) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] - v11 == &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&#34;built_in&#34;&gt;strncmp&lt;/span&gt;(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;ACTF&amp;#123;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5u&lt;/span&gt;) &amp;amp;&amp;amp; v12 == &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cyclic 26 -&amp;gt; flag&amp;#123;aaaabaaacaaadaaaeaaa&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212181827825.png&#34; alt=&#34;image-20211212181827825&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后面两个判断就是判断 flag 的格式为： &lt;code&gt;ACTF&amp;#123;xxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;strtok，用 &lt;code&gt;_&lt;/code&gt; 将字符串分隔开，v3 取的是最左边的一段字符， &lt;code&gt;ACTF&amp;#123;xxxx&lt;/code&gt; ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 &lt;code&gt;ACTF&amp;#123;xxxxxx_xxxxxx_xxxxxx&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v3 = strtok(flag, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v17 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v18 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v19 = *(_DWORD *)(v3 + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v20 = *(_WORD *)(v3 + &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v4 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v13 = *(_DWORD *)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v14 = *((_WORD *)v4 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8 = strtok(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*(_DWORD *)v15 = *(_DWORD *)v8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v16 = *((_WORD *)v8 + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;往下存在一个 &lt;code&gt;unk_4051D8&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212183722900.png&#34; alt=&#34;image-20211212183722900&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现把 &lt;code&gt;unk_4051D8&lt;/code&gt;  当成函数执行： &lt;code&gt;((int (__cdecl *)(int *))unk_4051D8)(&amp;amp;v17)&lt;/code&gt; ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 &lt;code&gt;ACTF&amp;#123;aaaaaa_bbbbbb_cccccc&amp;#125;&lt;/code&gt; ，用 x32dbg 动态跟：&lt;/p&gt;
&lt;p&gt;第一个循环：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212215926952.png&#34; alt=&#34;image-20211212215926952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;esi = &lt;span class=&#34;number&#34;&gt;0xE351DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; edi &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x151&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	tmp = byte ptr [esi + edi + &lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	[esi+edi+&lt;span class=&#34;number&#34;&gt;0x1F&lt;/span&gt;] = tmp ^ &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;异或结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230654068.png&#34; alt=&#34;image-20211212230654068&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到 EIP，发现就是通过循环解密出后面需要执行的字节码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212230935974.png&#34; alt=&#34;image-20211212230935974&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 &lt;code&gt;3@1b;b&lt;/code&gt; ，一个是 &lt;code&gt;Welcome&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231406269.png&#34; alt=&#34;image-20211212231406269&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下对刚刚写入的字符串的进行循环异或，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212231713546.png&#34; alt=&#34;image-20211212231713546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(a[i] ^ b[i] + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6 次循环后得到： &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212233654525.png&#34; alt=&#34;image-20211212233654525&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后出循环，test eax, eax，说明 eax 是作为函数执行结果，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211212234011240.png&#34; alt=&#34;image-20211212234011240&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行执行输入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ACTF&amp;#123;abcdef_hijklm_opqrst&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;处理完第一个 strtok 之后会得到一个字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt; ，中间的 Rv 是固定的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213232914763.png&#34; alt=&#34;image-20211213232914763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;三次 strtok 处理完之后会得到这样的结果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233135397.png&#34; alt=&#34;image-20211213233135397&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后来到字节码部分，注意传进来的字符串为： &lt;code&gt;abcdefRvabcdef&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233228219.png&#34; alt=&#34;image-20211213233228219&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233405286.png&#34; alt=&#34;image-20211213233405286&#34; /&gt;&lt;/p&gt;
&lt;p&gt;随后生成 &lt;code&gt;3@1b;b&lt;/code&gt;  和 &lt;code&gt;welcome&lt;/code&gt; ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 &lt;code&gt;yOu0y*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213233907366.png&#34; alt=&#34;image-20211213233907366&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重新运行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234107801.png&#34; alt=&#34;image-20211213234107801&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时相等了，跳转不实现：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234225491.png&#34; alt=&#34;image-20211213234225491&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image-20211213234415857.png&#34; alt=&#34;image-20211213234415857&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下来到第二个部分的验证：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211214101314551.png&#34; alt=&#34;image-20211214101314551&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res = &amp;#x27;yOu0y*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215110249558.png&#34; alt=&#34;image-20211215110249558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085046486.png&#34; alt=&#34;image-20211215085046486&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215085805863.png&#34; alt=&#34;image-20211215085805863&#34; /&gt;&lt;/p&gt;
&lt;p&gt;开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091013268.png&#34; alt=&#34;image-20211215091013268&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091206850.png&#34; alt=&#34;image-20211215091206850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215091509928.png&#34; alt=&#34;image-20211215091509928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092843105.png&#34; alt=&#34;image-20211215092843105&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215092045179.png&#34; alt=&#34;image-20211215092045179&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215111022353.png&#34; alt=&#34;image-20211215111022353&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到异或逻辑为：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxxxx&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cmp byte_405018[flag2[i] ^ (i+&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)],  &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(str2[i])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exp：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;byte_405018，用 Ghidra 的字节复制复制下来：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215103806688.png&#34; alt=&#34;image-20211215103806688&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到 flag2：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113140388.png&#34; alt=&#34;image-20211215113140388&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第三部分字符串发现就是直接进行 strncmp:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215113450451.png&#34; alt=&#34;image-20211215113450451&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以得到第三部分的字符串为： &lt;code&gt;5mcsM&amp;lt;&lt;/code&gt; ，最终 flag：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ACTF&amp;#123;yOu0y*_knowo3_5mcsM&amp;lt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag_prefix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ACTF&amp;#123;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_suffix = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5mcsM&amp;lt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;3@1b;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = &lt;span class=&#34;string&#34;&gt;&amp;#x27;elcome&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(a)):    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag1 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(a[i]) ^ &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(b[i])) + &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res2 = [&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;byte_405018 = [ &lt;span class=&#34;number&#34;&gt;0xf6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x95&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x65&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x89&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x36&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x67&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x43&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x74&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x62&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x99&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x57&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x73&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x85&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x52&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xce&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xed&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x75&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xeb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x94&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x47&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xda&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xec&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x53&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xea&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe9&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xbf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x79&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x69&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x39&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdf&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xb1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcb&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xba&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xee&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaa&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x66&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x45&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x72&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0d&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xca&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x84&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x4e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xf5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x92&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xdd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9c&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x96&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xcd&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x9b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xe3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfc&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xc1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x82&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x8f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x54&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xac&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xd3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x3b&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xef&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x26&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x6a&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xab&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x87&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xad&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xaf&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(res2)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag2 += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;+i)^ byte_405018.index(res2[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = flag_prefix + flag1 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag2 + &lt;span class=&#34;string&#34;&gt;&amp;#x27;_&amp;#x27;&lt;/span&gt; + flag3 + flag_suffix&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/image-20211215115036210.png&#34; alt=&#34;image-20211215115036210&#34; /&gt;&lt;/p&gt;
</content>
        <category term="Reverse" />
        <updated>2022-02-21T08:09:09.000Z</updated>
    </entry>
    <entry>
        <id>https://yusec2021.github.io/2022/02/17/VirtualFunction/</id>
        <title>虚函数以及虚表在IDA中的体现</title>
        <link rel="alternate" href="https://yusec2021.github.io/2022/02/17/VirtualFunction/"/>
        <content type="html">&lt;h2 id=&#34;reverse中虚函数虚表浅析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;h2 id=&#34;reverse中虚函数虚表浅析-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析-2&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针-2&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821809.png&#34; alt=&#34;image-202202221821809&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821374.png&#34; alt=&#34;image-202202221821374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822350.png&#34; alt=&#34;image-202202221822350&#34; /&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822816.png&#34; alt=&#34;image-202202221822816&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822113.png&#34; alt=&#34;image-202202221822113&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822536.png&#34; alt=&#34;image-202202221822536&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822914.png&#34; alt=&#34;image-202202221822914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822478.png&#34; alt=&#34;image-202202221822478&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;reverse中虚函数虚表浅析-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析-3&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针-3&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821809.png&#34; alt=&#34;image-202202221821809&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821374.png&#34; alt=&#34;image-202202221821374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822350.png&#34; alt=&#34;image-202202221822350&#34; /&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822816.png&#34; alt=&#34;image-202202221822816&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822113.png&#34; alt=&#34;image-202202221822113&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822536.png&#34; alt=&#34;image-202202221822536&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序-2&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822914.png&#34; alt=&#34;image-202202221822914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题-2&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822478.png&#34; alt=&#34;image-202202221822478&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;reverse中虚函数虚表浅析-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析-4&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针-4&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821809.png&#34; alt=&#34;image-202202221821809&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821374.png&#34; alt=&#34;image-202202221821374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822350.png&#34; alt=&#34;image-202202221822350&#34; /&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822816.png&#34; alt=&#34;image-202202221822816&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822113.png&#34; alt=&#34;image-202202221822113&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822536.png&#34; alt=&#34;image-202202221822536&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序-3&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822914.png&#34; alt=&#34;image-202202221822914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题-3&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822478.png&#34; alt=&#34;image-202202221822478&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;h2 id=&#34;reverse中虚函数虚表浅析-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析-5&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针-5&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821809.png&#34; alt=&#34;image-202202221821809&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821374.png&#34; alt=&#34;image-202202221821374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822350.png&#34; alt=&#34;image-202202221822350&#34; /&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822816.png&#34; alt=&#34;image-202202221822816&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822113.png&#34; alt=&#34;image-202202221822113&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822536.png&#34; alt=&#34;image-202202221822536&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序-4&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822914.png&#34; alt=&#34;image-202202221822914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题-4&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822478.png&#34; alt=&#34;image-202202221822478&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;h2 id=&#34;reverse中虚函数虚表浅析-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析-6&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针-6&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821809.png&#34; alt=&#34;image-202202221821809&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821374.png&#34; alt=&#34;image-202202221821374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822350.png&#34; alt=&#34;image-202202221822350&#34; /&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822816.png&#34; alt=&#34;image-202202221822816&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822113.png&#34; alt=&#34;image-202202221822113&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822536.png&#34; alt=&#34;image-202202221822536&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序-5&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822914.png&#34; alt=&#34;image-202202221822914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题-5&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822478.png&#34; alt=&#34;image-202202221822478&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;reverse中虚函数虚表浅析-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析-7&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针-7&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821809.png&#34; alt=&#34;image-202202221821809&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821374.png&#34; alt=&#34;image-202202221821374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822350.png&#34; alt=&#34;image-202202221822350&#34; /&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822816.png&#34; alt=&#34;image-202202221822816&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822113.png&#34; alt=&#34;image-202202221822113&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822536.png&#34; alt=&#34;image-202202221822536&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序-6&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822914.png&#34; alt=&#34;image-202202221822914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题-6&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822478.png&#34; alt=&#34;image-202202221822478&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序-7&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;h2 id=&#34;reverse中虚函数虚表浅析-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析-8&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针-8&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821809.png&#34; alt=&#34;image-202202221821809&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821374.png&#34; alt=&#34;image-202202221821374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822350.png&#34; alt=&#34;image-202202221822350&#34; /&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822816.png&#34; alt=&#34;image-202202221822816&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822113.png&#34; alt=&#34;image-202202221822113&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822536.png&#34; alt=&#34;image-202202221822536&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序-8&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822914.png&#34; alt=&#34;image-202202221822914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题-7&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822478.png&#34; alt=&#34;image-202202221822478&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题-8&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;h2 id=&#34;reverse中虚函数虚表浅析-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse中虚函数虚表浅析-9&#34;&gt;#&lt;/a&gt; Reverse 中虚函数 / 虚表浅析&lt;/h2&gt;
&lt;h3 id=&#34;this指针-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this指针-9&#34;&gt;#&lt;/a&gt; this 指针&lt;/h3&gt;
&lt;p&gt;在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：&lt;/p&gt;
&lt;p&gt;一个简单的 demo 来测试一下 this 指针：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = new Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821809.png&#34; alt=&#34;image-202202221821809&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221821374.png&#34; alt=&#34;image-202202221821374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;demo2：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Test&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func2&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test::func3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Test* test = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	test-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;func1&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *test);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 &lt;code&gt;func1&lt;/code&gt; 、 &lt;code&gt;func2&lt;/code&gt; 、 &lt;code&gt;func3&lt;/code&gt; ，我们注意到这里 call 的函数内容来自 &lt;code&gt;[edx]&lt;/code&gt; 、 &lt;code&gt;[edx+4]&lt;/code&gt; 、 &lt;code&gt;[edx+8]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822350.png&#34; alt=&#34;image-202202221822350&#34; /&gt;&lt;/p&gt;
&lt;p&gt;VS 的监视器中已经帮我们标注出来了，存在一个__vfptr，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822816.png&#34; alt=&#34;image-202202221822816&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822113.png&#34; alt=&#34;image-202202221822113&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822536.png&#34; alt=&#34;image-202202221822536&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ida加载该程序-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ida加载该程序-9&#34;&gt;#&lt;/a&gt; IDA 加载该程序&lt;/h3&gt;
&lt;p&gt;直接来到 main 函数：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main_0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v4; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-DCh]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-D4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+E0h] [ebp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __CheckForDebuggerJustMyCode(&amp;amp;unk_41C066);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = operator new(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = (_DWORD *)sub_411460(v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_411442(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, *v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))*v6)(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*v6 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))(v6);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 &lt;code&gt;virtual function table&lt;/code&gt;  也就是虚函数表：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_411880&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;Test::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据前面 VS 中的调试可以知道这个表中存放的是增量链接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822914.png&#34; alt=&#34;image-202202221822914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;基本上关于虚函数在 IDA 中的体现就介绍完了&lt;/p&gt;
&lt;h3 id=&#34;一道逆向题-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一道逆向题-9&#34;&gt;#&lt;/a&gt; 一道逆向题&lt;/h3&gt;
&lt;p&gt;SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD v4[&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp-6Ch] [ebp-F8h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v5; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-88h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v6; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-84h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v7; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-80h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v8[&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-7Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v9; &lt;span class=&#34;comment&#34;&gt;// [esp+88h] [ebp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;built_in&#34;&gt;sub_40EF90&lt;/span&gt;() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4026C0&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x6C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_401FE0&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;], v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F080&lt;/span&gt;(v4[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], v4[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F360&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_40F150&lt;/span&gt;(argc, (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v7 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v9 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4021C0&lt;/span&gt;(v8);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v7;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入 sub_401FE0:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;_DWORD *__thiscall &lt;span class=&#34;title&#34;&gt;sub_401FE0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; = &amp;amp;EASYRE::`vftable&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-34&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-108&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-48&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-120&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-74&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-126&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-73&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-81&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;69&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;-49&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;qmemcpy&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;  03\&amp;quot;3   0 203\&amp;quot;   $ &amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_4030A0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sub_402DE0&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *((_BYTE *)&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + i + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/YuSec2021/pic/raw/master/img/202202221822478.png&#34; alt=&#34;image-202202221822478&#34; /&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;来到校验 flag 的函数，可以发现存在虚函数的特征：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL __thiscall &lt;span class=&#34;title&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里 this 指针指向的首地址是 &lt;code&gt;0x4124E4&lt;/code&gt; ，根据偏移可以映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xC&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124F0&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_402500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x4124FC&lt;/span&gt; -&amp;gt; &lt;span class=&#34;built_in&#34;&gt;sub_4026E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(*(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (__thiscall **)(_DWORD *))(*&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;))(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;) -&amp;gt; &lt;span class=&#34;number&#34;&gt;0x41250C&lt;/span&gt; -&amp;gt; sub_402A00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;映射：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;BOOL __thiscall &lt;span class=&#34;title function_&#34;&gt;sub_4024B0&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(_DWORD *this, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BOOL result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  this[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402500() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_4026E0();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( sub_402A00() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <category term="C++" />
        <updated>2022-02-17T10:00:09.000Z</updated>
    </entry>
</feed>
