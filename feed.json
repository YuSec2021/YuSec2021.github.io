{
    "version": "https://jsonfeed.org/version/1",
    "title": "YuSec2021",
    "description": "Record My Learning",
    "home_page_url": "https://YuSec2021.github.io",
    "items": [
        {
            "id": "https://yusec2021.github.io/2022/02/21/[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]Splendid_MineCraft/[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]Splendid_MineCraft/",
            "url": "https://yusec2021.github.io/2022/02/21/[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]Splendid_MineCraft/[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]Splendid_MineCraft/",
            "title": "ACTF新生赛2020 Splendid_MineCraft",
            "date_published": "2022-02-21T08:09:09.000Z",
            "content_html": "<h2 id=\"actf新生赛2020splendid_minecraft\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"actf新生赛2020splendid_minecraft-2\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-2\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-3\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-3\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-4\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-4\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-5\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-5\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-6\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-6\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-7\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-7\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-8\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-8\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<h2 id=\"actf新生赛2020splendid_minecraft-9\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-9\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-10\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-10\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-11\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-11\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-12\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-12\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<h2 id=\"actf新生赛2020splendid_minecraft-13\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-13\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-14\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-14\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<h2 id=\"actf新生赛2020splendid_minecraft-15\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-15\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>重新运行：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-16\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-16\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>此时相等了，跳转不实现：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-17\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-17\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-18\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-18\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>往下来到第二个部分的验证：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-19\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-19\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<h2 id=\"actf新生赛2020splendid_minecraft-20\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-20\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-21\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-21\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<h2 id=\"actf新生赛2020splendid_minecraft-22\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-22\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-23\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-23\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-24\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-24\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-25\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-25\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-26\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-26\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<h2 id=\"actf新生赛2020splendid_minecraft-27\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-27\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<h2 id=\"actf新生赛2020splendid_minecraft-28\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-28\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<h2 id=\"actf新生赛2020splendid_minecraft-29\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-29\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>得到 flag2：</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-30\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-30\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<h2 id=\"actf新生赛2020splendid_minecraft-31\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-31\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<h2 id=\"actf新生赛2020splendid_minecraft-32\"><a class=\"markdownIt-Anchor\" href=\"#actf新生赛2020splendid_minecraft-32\">#</a> [ACTF 新生赛 2020] Splendid_MineCraft</h2>\n<p>反编译源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v6; <span class=\"comment\">// [esp+0h] [ebp-68h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+14h] [ebp-54h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *v8; <span class=\"comment\">// [esp+18h] [ebp-50h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// [esp+20h] [ebp-48h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> flag[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+24h] [ebp-44h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11[<span class=\"number\">25</span>]; <span class=\"comment\">// [esp+25h] [ebp-43h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [esp+3Dh] [ebp-2Bh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+44h] [ebp-24h]</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [esp+48h] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15[<span class=\"number\">4</span>]; <span class=\"comment\">// [esp+4Ch] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v16; <span class=\"comment\">// [esp+50h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [esp+54h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  __int16 v18; <span class=\"comment\">// [esp+58h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v19; <span class=\"comment\">// [esp+5Ch] [ebp-Ch]</span></span><br><span class=\"line\">  __int16 v20; <span class=\"comment\">// [esp+60h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;%s\\n&quot;</span>, (<span class=\"type\">char</span>)aWelcomeToActfS);</span><br><span class=\"line\">  sub_401050(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">char</span>)flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( &amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">    v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">    v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    v13 = *(_DWORD *)v4;</span><br><span class=\"line\">    v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">    *(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">    v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br><span class=\"line\">    dword_403354 = (<span class=\"type\">int</span>)&amp;unk_4051D8;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">int</span> (__cdecl *)(<span class=\"type\">int</span> *))unk_4051D8)(&amp;v17) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v9 = BYTE2(v19) ^ HIBYTE(v20) ^ v19 ^ HIBYTE(v19) ^ BYTE1(v19) ^ v20;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> ( i = <span class=\"number\">256</span>; i &lt; <span class=\"number\">496</span>; ++i )</span><br><span class=\"line\">        byte_405018[i] ^= v9;</span><br><span class=\"line\">      __asm &#123; jmp     eax &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020(<span class=\"string\">&quot;Wrong\\n&quot;</span>, v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>条件判断：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;flag[<span class=\"built_in\">strlen</span>(flag) + <span class=\"number\">1</span>] - v11 == <span class=\"number\">26</span> &amp;&amp; !<span class=\"built_in\">strncmp</span>(flag, <span class=\"string\">&quot;ACTF&#123;&quot;</span>, <span class=\"number\">5u</span>) &amp;&amp; v12 == <span class=\"string\">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>第一个判断是输入的 flag 的最后一个字符的地址 - v11 的起始地址是否等于 26，应该就是需要 flag 的长度为 26：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cyclic 26 -&gt; flag&#123;aaaabaaacaaadaaaeaaa&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"image-20211212181827825.png\" alt=\"image-20211212181827825\"></p>\n<p>后面两个判断就是判断 flag 的格式为： <code>ACTF&#123;xxxx&#125;</code></p>\n<p>strtok，用 <code>_</code> 将字符串分隔开，v3 取的是最左边的一段字符， <code>ACTF&#123;xxxx</code> ，注意 v17 是从第六个字符开始，取 4 个字符的长度，然后 v18 是从第 10 个字符开始，取两个字符，这样其实都可以推断出来整个 flag 的格式为 <code>ACTF&#123;xxxxxx_xxxxxx_xxxxxx&#125;</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = strtok(flag, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v17 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v18 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v19 = *(_DWORD *)(v3 + <span class=\"number\">5</span>);</span><br><span class=\"line\">v20 = *(_WORD *)(v3 + <span class=\"number\">9</span>);</span><br><span class=\"line\">v4 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">v13 = *(_DWORD *)v4;</span><br><span class=\"line\">v14 = *((_WORD *)v4 + <span class=\"number\">2</span>);</span><br><span class=\"line\">v8 = strtok(<span class=\"number\">0</span>, <span class=\"string\">&quot;_&quot;</span>);</span><br><span class=\"line\">*(_DWORD *)v15 = *(_DWORD *)v8;</span><br><span class=\"line\">v16 = *((_WORD *)v8 + <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>往下存在一个 <code>unk_4051D8</code> ：</p>\n<p><img data-src=\"image-20211212183722900.png\" alt=\"image-20211212183722900\"></p>\n<p>发现把 <code>unk_4051D8</code>  当成函数执行： <code>((int (__cdecl *)(int *))unk_4051D8)(&amp;v17)</code> ，说明上面的一大段数据应该是字节码，然后将 v17 当成参数传入该函数中，重新运行，输入 <code>ACTF&#123;aaaaaa_bbbbbb_cccccc&#125;</code> ，用 x32dbg 动态跟：</p>\n<p>第一个循环：</p>\n<p><img data-src=\"image-20211212215926952.png\" alt=\"image-20211212215926952\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esi = <span class=\"number\">0xE351DD</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> edi <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">0x151</span>):</span><br><span class=\"line\">\ttmp = byte ptr [esi + edi + <span class=\"number\">0x1F</span>]</span><br><span class=\"line\">\t[esi+edi+<span class=\"number\">0x1F</span>] = tmp ^ <span class=\"number\">0x72</span></span><br></pre></td></tr></table></figure>\n<p>异或结果：</p>\n<p><img data-src=\"image-20211212230654068.png\" alt=\"image-20211212230654068\"></p>\n<p>看到 EIP，发现就是通过循环解密出后面需要执行的字节码：</p>\n<p><img data-src=\"image-20211212230935974.png\" alt=\"image-20211212230935974\"></p>\n<p>解密之后的 push ebp 才是真正的函数开始，该函数先是往内存写值，一个是 <code>3@1b;b</code> ，一个是 <code>Welcome</code> ：</p>\n<p><img data-src=\"image-20211212231406269.png\" alt=\"image-20211212231406269\"></p>\n<p>往下对刚刚写入的字符串的进行循环异或，</p>\n<p><img data-src=\"image-20211212231713546.png\" alt=\"image-20211212231713546\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(a[i] ^ b[i] + <span class=\"number\">0x23</span>)</span><br></pre></td></tr></table></figure>\n<p>6 次循环后得到： <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211212233654525.png\" alt=\"image-20211212233654525\"></p>\n<p>最后出循环，test eax, eax，说明 eax 是作为函数执行结果，</p>\n<p><img data-src=\"image-20211212234011240.png\" alt=\"image-20211212234011240\"></p>\n<p>重新运行执行输入：</p>\n<p><code>ACTF&#123;abcdef_hijklm_opqrst&#125;</code></p>\n<p>处理完第一个 strtok 之后会得到一个字符串为： <code>abcdefRvabcdef</code> ，中间的 Rv 是固定的</p>\n<p><img data-src=\"image-20211213232914763.png\" alt=\"image-20211213232914763\"></p>\n<p>三次 strtok 处理完之后会得到这样的结果：</p>\n<p><img data-src=\"image-20211213233135397.png\" alt=\"image-20211213233135397\"></p>\n<p>然后来到字节码部分，注意传进来的字符串为： <code>abcdefRvabcdef</code></p>\n<p><img data-src=\"image-20211213233228219.png\" alt=\"image-20211213233228219\"></p>\n<p>进来之后先对字节码进行解密，解谜之后从 0x9F515C 开始才是函数处理的开始，注意传入的参数由 EDX 指向：</p>\n<p><img data-src=\"image-20211213233405286.png\" alt=\"image-20211213233405286\"></p>\n<p>随后生成 <code>3@1b;b</code>  和 <code>welcome</code> ，对这两个值进行异或再加上 0x23，然后跟传入的字符串进行对比，不难发现预期值应该是两个相等的，往下走完循环拿完处理后的结果为 <code>yOu0y*</code></p>\n<p><img data-src=\"image-20211213233907366.png\" alt=\"image-20211213233907366\"></p>\n<p>重新运行：</p>\n<p><img data-src=\"image-20211213234107801.png\" alt=\"image-20211213234107801\"></p>\n<p>此时相等了，跳转不实现：</p>\n<p><img data-src=\"image-20211213234225491.png\" alt=\"image-20211213234225491\"></p>\n<p>将 edx 作为计数器来存储相等的个数，最后对比是否全部相等，将返回值置为 1：</p>\n<p><img data-src=\"image-20211213234415857.png\" alt=\"image-20211213234415857\"></p>\n<p>往下来到第二个部分的验证：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211214101314551.png\" alt=\"image-20211214101314551\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = &#x27;yOu0y*&#x27;</span><br><span class=\"line\">key = res[0] ^ res[1] ^ res[3] ^ res[0] ^ res[5] ^ res[2] = </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215110249558.png\" alt=\"image-20211215110249558\"></p>\n<p>异或之后的值作为 key，然后对：405018 开始的值进行异或，跟第一个函数一样，通过这个 key 对字节码进行解密，然后再执行，这里的内容就是第二部分字符串的验证:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085046486.png\" alt=\"image-20211215085046486\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215085805863.png\" alt=\"image-20211215085805863\"></p>\n<p>开局几个循环啥事都没干就是将输入的第二部分字符串进行 memcpy，到这个位置才真正对字符串进行处理：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091013268.png\" alt=\"image-20211215091013268\"></p>\n<p>往下的 mov 很重要，EAX 此时的值为 0x705018，也就是该函数的字节码首地址，这里异或的结果作为数组下标，将字节码以 byte 的形式存储到 EBX：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091206850.png\" alt=\"image-20211215091206850\"></p>\n<p>往下从 0x705018+0x166 取值与上面通过偏移拿到的值进行比较：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215091509928.png\" alt=\"image-20211215091509928\"></p>\n<p>edi 作为计数器，回到异或之前可以看到 ecx 的值来自于 edi：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092843105.png\" alt=\"image-20211215092843105\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215092045179.png\" alt=\"image-20211215092045179\"></p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215111022353.png\" alt=\"image-20211215111022353\"></p>\n<p>得到异或逻辑为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;xxxxxx&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(flag2)):</span><br><span class=\"line\">\tcmp byte_405018[flag2[i] ^ (i+<span class=\"number\">0x83</span>)],  <span class=\"built_in\">ord</span>(str2[i])</span><br></pre></td></tr></table></figure>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [...]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">  flag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br></pre></td></tr></table></figure>\n<p>byte_405018，用 Ghidra 的字节复制复制下来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215103806688.png\" alt=\"image-20211215103806688\"></p>\n<p>得到 flag2：</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113140388.png\" alt=\"image-20211215113140388\"></p>\n<p>第三部分字符串发现就是直接进行 strncmp:</p>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215113450451.png\" alt=\"image-20211215113450451\"></p>\n<p>可以得到第三部分的字符串为： <code>5mcsM&lt;</code> ，最终 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACTF&#123;yOu0y*_knowo3_5mcsM&lt;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag_prefix = <span class=\"string\">&#x27;ACTF&#123;&#x27;</span></span><br><span class=\"line\">flag_suffix = <span class=\"string\">&#x27;&#125;&#x27;</span></span><br><span class=\"line\">flag3 = <span class=\"string\">&#x27;5mcsM&lt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"string\">&#x27;3@1b;b&#x27;</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;elcome&#x27;</span></span><br><span class=\"line\">flag1 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)):    </span><br><span class=\"line\">\tflag1 += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(a[i]) ^ <span class=\"built_in\">ord</span>(b[i])) + <span class=\"number\">0x23</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res2 = [<span class=\"number\">0x30</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">byte_405018 = [ <span class=\"number\">0xf6</span>, <span class=\"number\">0xa3</span>, <span class=\"number\">0x5b</span>, <span class=\"number\">0x9d</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0x98</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x8c</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0xbb</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0x09</span>, <span class=\"number\">0xfd</span>, <span class=\"number\">0xf3</span>, <span class=\"number\">0x5c</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x4c</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x8e</span>, <span class=\"number\">0x4d</span>, <span class=\"number\">0xc4</span>, <span class=\"number\">0x80</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0xd6</span>, <span class=\"number\">0xa9</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0xbc</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xa8</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0xf9</span>, <span class=\"number\">0xe1</span>, <span class=\"number\">0x1d</span>, <span class=\"number\">0xe4</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7d</span>, <span class=\"number\">0x2a</span>, <span class=\"number\">0x2c</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0x9e</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x7a</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x74</span>, <span class=\"number\">0xd1</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x60</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x4b</span>, <span class=\"number\">0xae</span>, <span class=\"number\">0x99</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xc6</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0xb0</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x2b</span>, <span class=\"number\">0xfe</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xb6</span>, <span class=\"number\">0xd9</span>, <span class=\"number\">0xde</span>, <span class=\"number\">0x7b</span>, <span class=\"number\">0xcf</span>, <span class=\"number\">0x4f</span>, <span class=\"number\">0xb3</span>, <span class=\"number\">0xd5</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0x7c</span>, <span class=\"number\">0x0a</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0x7f</span>, <span class=\"number\">0xb7</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x25</span>, <span class=\"number\">0xc9</span>, <span class=\"number\">0xd0</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0xce</span>, <span class=\"number\">0xbd</span>, <span class=\"number\">0x6c</span>, <span class=\"number\">0xe5</span>, <span class=\"number\">0x6f</span>, <span class=\"number\">0xa5</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0xf0</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0xe7</span>, <span class=\"number\">0x0c</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xa4</span>, <span class=\"number\">0xd7</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0x9a</span>, <span class=\"number\">0xf2</span>, <span class=\"number\">0x1e</span>, <span class=\"number\">0xeb</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xf1</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0x2f</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0xf7</span>, <span class=\"number\">0xe6</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0xfb</span>, <span class=\"number\">0x83</span>, <span class=\"number\">0x5e</span>, <span class=\"number\">0xcc</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x4a</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x07</span>, <span class=\"number\">0x1c</span>, <span class=\"number\">0x8a</span>, <span class=\"number\">0x5a</span>, <span class=\"number\">0x17</span>, <span class=\"number\">0x1b</span>, <span class=\"number\">0xda</span>, <span class=\"number\">0xec</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x0e</span>, <span class=\"number\">0x7e</span>, <span class=\"number\">0xb4</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xf4</span>, <span class=\"number\">0xb8</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0x97</span>, <span class=\"number\">0xbe</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0xc2</span>, <span class=\"number\">0xe8</span>, <span class=\"number\">0xea</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0xe9</span>, <span class=\"number\">0x2d</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x0b</span>, <span class=\"number\">0xbf</span>, <span class=\"number\">0xb5</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xd2</span>, <span class=\"number\">0x3e</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x5d</span>, <span class=\"number\">0xf8</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x5f</span>, <span class=\"number\">0xdb</span>, <span class=\"number\">0xfa</span>, <span class=\"number\">0xb2</span>, <span class=\"number\">0x8b</span>, <span class=\"number\">0x6e</span>, <span class=\"number\">0xa2</span>, <span class=\"number\">0xdf</span>, <span class=\"number\">0x16</span>, <span class=\"number\">0xe2</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xb1</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0xba</span>, <span class=\"number\">0xee</span>, <span class=\"number\">0x8d</span>, <span class=\"number\">0xaa</span>, <span class=\"number\">0xc8</span>, <span class=\"number\">0xc7</span>, <span class=\"number\">0xc5</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0x6d</span>, <span class=\"number\">0x3a</span>, <span class=\"number\">0x45</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x0d</span>, <span class=\"number\">0xca</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x4e</span>, <span class=\"number\">0xf5</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x6b</span>, <span class=\"number\">0x92</span>, <span class=\"number\">0xdc</span>, <span class=\"number\">0xdd</span>, <span class=\"number\">0x9c</span>, <span class=\"number\">0x3f</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x96</span>, <span class=\"number\">0xa1</span>, <span class=\"number\">0x9f</span>, <span class=\"number\">0xcd</span>, <span class=\"number\">0x9b</span>, <span class=\"number\">0xe3</span>, <span class=\"number\">0xa0</span>, <span class=\"number\">0xa7</span>, <span class=\"number\">0xfc</span>, <span class=\"number\">0xc1</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0x2e</span>, <span class=\"number\">0x82</span>, <span class=\"number\">0x8f</span>, <span class=\"number\">0x30</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x04</span>, <span class=\"number\">0xac</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xd3</span>, <span class=\"number\">0x3b</span>, <span class=\"number\">0xef</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0xa6</span>, <span class=\"number\">0x1f</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x6a</span>, <span class=\"number\">0xab</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0xad</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x0f</span>, <span class=\"number\">0xaf</span> ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(res2)):</span><br><span class=\"line\">\tflag2 += <span class=\"built_in\">chr</span>((<span class=\"number\">0x83</span>+i)^ byte_405018.index(res2[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag_prefix + flag1 + <span class=\"string\">&#x27;_&#x27;</span> + flag2 + <span class=\"string\">&#x27;_&#x27;</span> + flag3 + flag_suffix</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DSplendid_MineCraft.assets/image-20211215115036210.png\" alt=\"image-20211215115036210\"></p>\n",
            "tags": [
                "Reverse"
            ]
        },
        {
            "id": "https://yusec2021.github.io/2022/02/18/Ceshi/",
            "url": "https://yusec2021.github.io/2022/02/18/Ceshi/",
            "title": "测试",
            "date_published": "2022-02-18T06:48:09.000Z",
            "content_html": "<h2 id=\"ceshi\"><a class=\"markdownIt-Anchor\" href=\"#ceshi\">#</a> Ceshi</h2>\n<h2 id=\"ceshi-2\"><a class=\"markdownIt-Anchor\" href=\"#ceshi-2\">#</a> Ceshi</h2>\n<p><img data-src=\"image-20220218144804118.png\" alt=\"image-20220218144804118\"></p>\n",
            "tags": []
        },
        {
            "id": "https://yusec2021.github.io/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/",
            "url": "https://yusec2021.github.io/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/",
            "title": "虚函数以及虚表在IDA中的体现",
            "date_published": "2022-02-17T10:00:09.000Z",
            "content_html": "<h2 id=\"reverse中虚函数虚表浅析\"><a class=\"markdownIt-Anchor\" href=\"#reverse中虚函数虚表浅析\">#</a> Reverse 中虚函数 / 虚表浅析</h2>\n<h3 id=\"this指针\"><a class=\"markdownIt-Anchor\" href=\"#this指针\">#</a> this 指针</h3>\n<p>在 C++ 的类中，需要研究一个非常重要并且特殊的指针就是 this 指针：</p>\n<p>一个简单的 demo 来测试一下 this 指针：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Test</span>&#123;</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> b;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> c;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tTest* test = new Test;</span><br><span class=\"line\">\ttest-&gt;a = <span class=\"number\">100</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, *test);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到，直接取 test 的值就是 a 的值，这里的 test 就是 this 指针本身，而 this 指针的特性就是指向类的首地址，在对类进行内存分配时，this 指针会默认指向该类的首地址：</p>\n<img data-src=\"/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/image-20211231145134480.png\" class=\"image-20211231145134480\">\n<p><strong>关于类和结构体：其底层实现是一样的，所以 demo 中用 struct 和 class 的结果相同</strong></p>\n<img data-src=\"/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/image-20211231145838157.png\" class=\"image-20211231145838157\">\n<p>demo2：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a;</span><br><span class=\"line\">\t<span class=\"type\">int</span> b;</span><br><span class=\"line\">\t<span class=\"type\">int</span> c;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">func1</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">func2</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">func3</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Test::func1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;func1&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Test::func2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;func2&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Test::func3</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;func3&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tTest* test = <span class=\"keyword\">new</span> Test;</span><br><span class=\"line\">\ttest-&gt;a = <span class=\"number\">100</span>;</span><br><span class=\"line\">\ttest-&gt;<span class=\"built_in\">func1</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, *test);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里我定义了一个结构体，带着三个虚函数，虚函数需要定义，通过结构体名：：方法名的形式进行定义，重点在实例化对象调用函数的位置，调试来到反汇编窗口，红框中标注的为实际调用函数的位置，这里我们在声明结构体时从上到下的声明为 <code>func1</code> 、 <code>func2</code> 、 <code>func3</code> ，我们注意到这里 call 的函数内容来自 <code>[edx]</code> 、 <code>[edx+4]</code> 、 <code>[edx+8]</code></p>\n<img data-src=\"/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/image-20211231151743342.png\" class=\"image-20211231151743342\">\n<p>VS 的监视器中已经帮我们标注出来了，存在一个 <code>__vfptr</code> ，这里指针就是指向虚表的指针，对于一个类 or 结构体中，如果其虚函数的数量大于 1，那么编译器在初始化时会自动创建一个虚表，用来存储函数的地址，通过代码的编写顺序进行函数索引的映射，虚表中存放的就是函数定义的地址：</p>\n<img data-src=\"/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/image-20211231152320103.png\" class=\"image-20211231152320103\">\n<p>但是在 VS 中默认开启了增量链接，所以此时虚表中指向的还是一个跳转地址，跳转地址之后才是函数真正的位置：</p>\n<img data-src=\"/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/image-20211231152713891.png\" class=\"image-20211231152713891\">\n<img data-src=\"/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/image-20211231152733713.png\" class=\"image-20211231152733713\">\n<h3 id=\"ida加载该程序\"><a class=\"markdownIt-Anchor\" href=\"#ida加载该程序\">#</a> IDA 加载该程序</h3>\n<p>直接来到 main 函数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main_0</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  _DWORD *v4; <span class=\"comment\">// [esp+Ch] [ebp-DCh]</span></span><br><span class=\"line\">  <span class=\"type\">void</span> *v5; <span class=\"comment\">// [esp+14h] [ebp-D4h]</span></span><br><span class=\"line\">  _DWORD *v6; <span class=\"comment\">// [esp+E0h] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  __CheckForDebuggerJustMyCode(&amp;unk_41C066);</span><br><span class=\"line\">  v5 = operator new(<span class=\"number\">0x10</span>u);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v5 )</span><br><span class=\"line\">    v4 = (_DWORD *)sub_411460(v5);</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    v4 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v6 = v4;</span><br><span class=\"line\">  v4[<span class=\"number\">1</span>] = <span class=\"number\">100</span>;</span><br><span class=\"line\">  (*(<span class=\"type\">void</span> (__thiscall **)(_DWORD *))*v6)(v6);</span><br><span class=\"line\">  (*(<span class=\"type\">void</span> (__thiscall **)(_DWORD *))(*v6 + <span class=\"number\">4</span>))(v6);</span><br><span class=\"line\">  (*(<span class=\"type\">void</span> (__thiscall **)(_DWORD *))(*v6 + <span class=\"number\">8</span>))(v6);</span><br><span class=\"line\">  sub_411442(<span class=\"string\">&quot;%d&quot;</span>, *v4);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>根据源码，这一部分就是虚函数调用在 IDA 中的反编译结果：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(*(<span class=\"built_in\">void</span> (__thiscall **)(_DWORD *))*v6)(v6);</span><br><span class=\"line\">(*(<span class=\"built_in\">void</span> (__thiscall **)(_DWORD *))(*v6 + <span class=\"number\">4</span>))(v6);</span><br><span class=\"line\">(*(<span class=\"built_in\">void</span> (__thiscall **)(_DWORD *))(*v6 + <span class=\"number\">8</span>))(v6);</span><br></pre></td></tr></table></figure>\n<p>这里 v6 是指向 v4，来到 v4 的初始化，可以看到存在一个 <code>virtual function table</code>  也就是虚函数表：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_DWORD *__thiscall <span class=\"title\">sub_411880</span><span class=\"params\">(_DWORD *<span class=\"keyword\">this</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  *<span class=\"keyword\">this</span> = &amp;Test::`vftable<span class=\"number\">&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>根据前面 VS 中的调试可以知道这个表中存放的是增量链接：</p>\n<img data-src=\"/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/image-20211231160032664.png\" class=\"image-20211231160032664\">\n<p>基本上关于虚函数在 IDA 中的体现就介绍完了</p>\n<h3 id=\"一道逆向题\"><a class=\"markdownIt-Anchor\" href=\"#一道逆向题\">#</a> 一道逆向题</h3>\n<p>SWPUCTF2019 easyRE，同样来到 main 函数，本文重点在虚函数的创建以及体现，其他部分不做分析：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> __cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  _DWORD v4[<span class=\"number\">28</span>]; <span class=\"comment\">// [esp-6Ch] [ebp-F8h] BYREF</span></span><br><span class=\"line\">  _DWORD *v5; <span class=\"comment\">// [esp+4h] [ebp-88h]</span></span><br><span class=\"line\">  _DWORD *v6; <span class=\"comment\">// [esp+8h] [ebp-84h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v7; <span class=\"comment\">// [esp+Ch] [ebp-80h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v8[<span class=\"number\">108</span>]; <span class=\"comment\">// [esp+10h] [ebp-7Ch] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v9; <span class=\"comment\">// [esp+88h] [ebp-4h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">sub_40EF90</span>() )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"built_in\">sub_4026C0</span>(<span class=\"number\">0x6C</span>u);</span><br><span class=\"line\">  <span class=\"built_in\">sub_401FE0</span>(v4[<span class=\"number\">27</span>], v5);</span><br><span class=\"line\">  v9 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v6 = v4;</span><br><span class=\"line\">  <span class=\"built_in\">sub_40F360</span>(v8);</span><br><span class=\"line\">  <span class=\"built_in\">sub_40F080</span>(v4[<span class=\"number\">0</span>], v4[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  v5 = v4;</span><br><span class=\"line\">  <span class=\"built_in\">sub_40F360</span>(v8);</span><br><span class=\"line\">  <span class=\"built_in\">sub_40F150</span>(argc, (<span class=\"type\">int</span>)argv);</span><br><span class=\"line\">  v7 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v9 = <span class=\"number\">-1</span>;</span><br><span class=\"line\">  <span class=\"built_in\">sub_4021C0</span>(v8);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v7;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>进入 sub_401FE0:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">_DWORD *__thiscall <span class=\"title\">sub_401FE0</span><span class=\"params\">(_DWORD *<span class=\"keyword\">this</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+4h] [ebp-14h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  *<span class=\"keyword\">this</span> = &amp;EASYRE::`vftable<span class=\"number\">&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">52</span>) = <span class=\"number\">8</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">53</span>) = <span class=\"number\">-22</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">54</span>) = <span class=\"number\">88</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">55</span>) = <span class=\"number\">-34</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">56</span>) = <span class=\"number\">-108</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">57</span>) = <span class=\"number\">-48</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">58</span>) = <span class=\"number\">59</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">59</span>) = <span class=\"number\">-66</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">60</span>) = <span class=\"number\">-120</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">61</span>) = <span class=\"number\">-44</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">62</span>) = <span class=\"number\">50</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">63</span>) = <span class=\"number\">-74</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">64</span>) = <span class=\"number\">20</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">65</span>) = <span class=\"number\">-126</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">66</span>) = <span class=\"number\">-73</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">67</span>) = <span class=\"number\">-81</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">68</span>) = <span class=\"number\">20</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">69</span>) = <span class=\"number\">84</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">70</span>) = <span class=\"number\">127</span>;</span><br><span class=\"line\">  *((_BYTE *)<span class=\"keyword\">this</span> + <span class=\"number\">71</span>) = <span class=\"number\">-49</span>;</span><br><span class=\"line\">  <span class=\"built_in\">qmemcpy</span>(<span class=\"keyword\">this</span> + <span class=\"number\">18</span>, <span class=\"string\">&quot;  03\\&quot;3   0 203\\&quot;   $ &quot;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">  <span class=\"built_in\">sub_4030A0</span>(<span class=\"keyword\">this</span> + <span class=\"number\">23</span>);</span><br><span class=\"line\">  <span class=\"built_in\">sub_402DE0</span>(<span class=\"keyword\">this</span> + <span class=\"number\">26</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">40</span>; ++i )</span><br><span class=\"line\">    *((_BYTE *)<span class=\"keyword\">this</span> + i + <span class=\"number\">12</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该题目中不存在增量链接，所以这里的虚函数表中指向的就是函数真正的地址：</p>\n<img data-src=\"/2022/02/17/%E8%99%9A%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%99%9A%E8%A1%A8%E5%9C%A8IDA%E4%B8%AD%E7%9A%84%E4%BD%93%E7%8E%B0/image-20211231160559928.png\" class=\"image-20211231160559928\">\n<p>来到校验 flag 的函数，可以发现存在虚函数的特征：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">BOOL __thiscall <span class=\"title\">sub_4024B0</span><span class=\"params\">(_DWORD *<span class=\"keyword\">this</span>, <span class=\"type\">int</span> flag)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  BOOL result; <span class=\"comment\">// eax</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>[<span class=\"number\">2</span>] = flag;</span><br><span class=\"line\">  result = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (*(<span class=\"built_in\">int</span> (__thiscall **)(_DWORD *))(*<span class=\"keyword\">this</span> + <span class=\"number\">0xC</span>))(<span class=\"keyword\">this</span>) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    (*(<span class=\"built_in\">void</span> (__thiscall **)(_DWORD *))(*<span class=\"keyword\">this</span> + <span class=\"number\">0x18</span>))(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (*(<span class=\"built_in\">int</span> (__thiscall **)(_DWORD *))(*<span class=\"keyword\">this</span> + <span class=\"number\">0x28</span>))(<span class=\"keyword\">this</span>) )</span><br><span class=\"line\">      result = <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里 this 指针指向的首地址是 <code>0x4124E4</code> ，根据偏移可以映射：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(*(<span class=\"built_in\">int</span> (__thiscall **)(_DWORD *))(*<span class=\"keyword\">this</span> + <span class=\"number\">0xC</span>))(<span class=\"keyword\">this</span>) -&gt; <span class=\"number\">0x4124F0</span> -&gt; <span class=\"built_in\">sub_402500</span></span><br><span class=\"line\">(*(<span class=\"built_in\">void</span> (__thiscall **)(_DWORD *))(*<span class=\"keyword\">this</span> + <span class=\"number\">0x18</span>))(<span class=\"keyword\">this</span>) -&gt; <span class=\"number\">0x4124FC</span> -&gt; <span class=\"built_in\">sub_4026E0</span></span><br><span class=\"line\">(*(<span class=\"built_in\">int</span> (__thiscall **)(_DWORD *))(*<span class=\"keyword\">this</span> + <span class=\"number\">0x28</span>))(<span class=\"keyword\">this</span>) -&gt; <span class=\"number\">0x41250C</span> -&gt; sub_402A00</span><br></pre></td></tr></table></figure>\n<p>映射：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOL __thiscall <span class=\"title function_\">sub_4024B0</span><span class=\"params\">(_DWORD *this, <span class=\"type\">int</span> flag)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  BOOL result; <span class=\"comment\">// eax</span></span><br><span class=\"line\"></span><br><span class=\"line\">  this[<span class=\"number\">2</span>] = flag;</span><br><span class=\"line\">  result = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( sub_402500() )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    sub_4026E0();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( sub_402A00() )</span><br><span class=\"line\">      result = <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "C++"
            ]
        },
        {
            "id": "https://yusec2021.github.io/2022/02/17/test1/",
            "url": "https://yusec2021.github.io/2022/02/17/test1/",
            "title": "test1",
            "date_published": "2022-02-17T07:12:16.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://yusec2021.github.io/2022/02/16/hello-world/",
            "url": "https://yusec2021.github.io/2022/02/16/hello-world/",
            "title": "Hello World",
            "date_published": "2022-02-16T09:14:04.416Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}